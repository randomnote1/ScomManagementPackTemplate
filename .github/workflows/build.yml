name: Build Management Pack

# Run when a pull request is closed
on:
  pull_request:
    types: [closed]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  
  build:
    # Only run when a pull request is merged to dev or main
    if: |
      ( github.event.pull_request.merged == true ) &&
      ( ( github.ref == 'refs/head/main' ) || ( github.ref == 'refs/head/dev' ) )
    runs-on: windows-latest

    steps:

      # Check out the repository the pull request in merging into (dev/main)
      - name: Checkout Base Repo
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.base.ref }}
          path: base

      # Check out the repository the pull request in merging from
      - name: Checkout Head Repo
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          path: head
      
      # Execute the build PowerShell script
      - name: Execute build script
        shell: powershell
        run: .\base\Build\build.ps1

#      - name: Check In Version Updates
#        uses: EndBug/add-and-commit@v7
#        with:
#          message: 'Updated version'
#          add: './AlertManagement/*.mpproj*'
#
#      # Upload the management pack files as artifacts
#      - name: Upload Artifacts
#        uses: actions/upload-artifact@v2
#        with:
#          name: Alert Management
#          path: AlertManagement/bin/Release/*.mpb
#
#      # Create a release of the management pack
#      - name: Generate Release
#        if: ( github.ref == 'refs/heads/main' ) && ( github.repository == 'randomnote1/AlertManagement' )
#        uses: softprops/action-gh-release@v1
#        with:
#          name: v${{ env.Version }}
#          tag_name: v${{ env.Version }}
#          prerelease: false
#          files: ${{ env.ArtifactFileName }}
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#
#      # Create a beta release of the management pack
#      - name: Generate Beta Release
#        if: ( github.ref == 'refs/heads/dev' ) && ( github.repository == 'randomnote1/AlertManagement' )
#        uses: softprops/action-gh-release@v1
#        with:
#          name: v${{ env.Version }}
#          tag_name: v${{ env.Version }}
#          prerelease: true
#          files: ${{ env.ArtifactFileName }}
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
